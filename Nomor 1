//NOMOR1

#include <iostream>
#include <stack>
#include <string>
using namespace std;


bool check(string input)
{
   
    stack<char> temp;
    for (int i = 0; i < input.length(); i++)
    {

        if (temp.empty() /* || (input[i] == 'b') || (input[i] == 'B')*/)
        {
            temp.push(input[i]);

            if (temp.top() == 'b' || temp.top() == 'B')
            {
                i = i + 4;
            }
        }

        else if ((temp.top() == '(' && input[i] == ')')
            || (temp.top() == '{' && input[i] == '}')
            || (temp.top() == '[' && input[i] == ']')
            || (temp.top() == '/' && input[i] == '/')
            || (temp.top() == '*' && input[i] == '*')){
            temp.pop();
        }

        else if ((temp.top() == 'b' && input[i] == 'e')
            || (temp.top() == 'B' && input[i] == 'E'))
        {
            temp.pop();
            i= i + 2;
        }
        
        else
            temp.push(input[i]);
    }

    if (temp.empty()) 
        return true;

    while(!temp.empty())
    {
        if (temp.top() == '(')
        {
            cout << "Too much open bracket!!"<<endl;
            temp.pop();
        }
            
        else if (temp.top() == '[')
        {
            cout << "Too much open squared bracket!!"<<endl;
            temp.pop();
        }

        else if (temp.top() == '{')
        {
            cout << "Too much open curly bracket!!"<<endl;
            temp.pop();
        }

        else if (temp.top() == '/')
        {
            cout << "Too much open open command!!"<<endl;
            temp.pop();
            temp.pop();
        }

        else if (temp.top() == ')')
        {
            cout << "Too much close bracket!! or can't begin with )"<<endl;
            temp.pop();
        }

        else if (temp.top() == ']')
        {
            cout << "Too much close squared bracket!! or can't begin with ] "<<endl;
            temp.pop();
        }

        else if (temp.top() == '}')
        {
            cout << "Too much close curly bracket!! or can't begin with }"<<endl;
            temp.pop();
        }

        else if (temp.top() == '*')
        {
            cout << "Too much close command!! or cant begin with */"<<endl;
            temp.pop();
            temp.pop();
        }
        else if (temp.top() == 'b')
        {
            cout << "Too much begin!!"<<endl;
            temp.pop();
        }

        else if (temp.top() == 'e')
        {
            cout << "Too much end!! or or cant begin with e"<<endl;
            temp.pop();
        }
    }
    return false;
}


int main()
{
    //contoh yang benar
    string input = "/()/[][[]]/**/beginend";
    //cin >> input;

    if (check(input))
        cout << "Balanced"<<endl;
    else
        cout << "Not Balanced"<<endl;

    cout << "=========================================================\n";
    //contoh yang benar ke-2
    string input2 = "beginend()";
    //cin >> input;

    if (check(input2))
        cout << "Balanced"<<endl;
    else
        cout << "Not Balanced"<<endl;
    cout << "=========================================================\n";
    //contoh yang salah ke 1
    string input3 = "(){{}}}[]";
    //cin >> input;

    if (check(input3))
        cout << "Balanced" << endl;
    else
        cout << "Not Balanced" << endl;
    return 0;
}
